apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

apply from: './scripts/artifact_naming.gradle'
apply from: './scripts/secret.gradle'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "sample.kotlin.project"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'LOG_TAG', '"SKP"'
    }

    signingConfigs {
        debug {
            storeFile file('debug.jks')
            storePassword 'htQVSM3d'
            keyAlias 'debug-key'
            keyPassword '8mrmvU6x'
        }
        release {
            storeFile getSecretKeystoreFile()
            storePassword getSecretKeystorePassword()
            keyAlias getSecretKeyAlias()
            keyPassword getSecretKeyPassword()
        }
    }

    buildTypes {
        debug {
            versionNameSuffix '-DEBUG'
            applicationIdSuffix '.debug'
            resValue "string", "app_name", "${APPLICATION_NAME}${versionNameSuffix}"
            debuggable true
            signingConfig signingConfigs.debug

            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'ENABLE_MINIFY', "${minifyEnabled}"

            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
            ext.enableCrashlytics = false
            buildConfigField 'boolean', 'ENABLE_CRS', 'false'

            // logging
            buildConfigField 'boolean', 'PRINT_LOGS_TO_CRS', 'true'
            buildConfigField 'boolean', 'PRINT_LOGS_TO_FILE', 'true'
            buildConfigField 'boolean', 'PRINT_LOGS_TO_LOGCAT', 'true'
            buildConfigField 'boolean', 'PRINT_SENSITIVE_DATA', 'true'
            buildConfigField 'boolean', 'DUMP_OUT_OF_MEMORY', 'false'
        }
        qa {
            versionNameSuffix '-QA'
            applicationIdSuffix '.qa'
            resValue "string", "app_name", "${APPLICATION_NAME}${versionNameSuffix}"
            debuggable true
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release', 'debug']

            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'ENABLE_MINIFY', "${minifyEnabled}"

            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
            ext.enableCrashlytics = true
            buildConfigField 'boolean', 'ENABLE_CRS', 'true'

            // logging
            buildConfigField 'boolean', 'PRINT_LOGS_TO_CRS', 'true'
            buildConfigField 'boolean', 'PRINT_LOGS_TO_FILE', 'true'
            buildConfigField 'boolean', 'PRINT_LOGS_TO_LOGCAT', 'true'
            buildConfigField 'boolean', 'PRINT_SENSITIVE_DATA', 'true'
            buildConfigField 'boolean', 'DUMP_OUT_OF_MEMORY', 'false'
        }
        release {
            versionNameSuffix ''
            applicationIdSuffix ''
            resValue "string", "app_name", "${APPLICATION_NAME}${versionNameSuffix}"
            //debuggable true
            signingConfig signingConfigs.release

            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'ENABLE_MINIFY', "${minifyEnabled}"

            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
            ext.enableCrashlytics = true
            buildConfigField 'boolean', 'ENABLE_CRS', 'true'

            // logging
            buildConfigField 'boolean', 'PRINT_LOGS_TO_CRS', 'true'
            buildConfigField 'boolean', 'PRINT_LOGS_TO_FILE', 'false'
            buildConfigField 'boolean', 'PRINT_LOGS_TO_LOGCAT', 'false'
            buildConfigField 'boolean', 'PRINT_SENSITIVE_DATA', 'false'
            buildConfigField 'boolean', 'DUMP_OUT_OF_MEMORY', 'false'
        }
    }

    dependencies {
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'androidx.test.ext:junit:1.1.1'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        implementation 'androidx.appcompat:appcompat:1.1.0'
        implementation 'androidx.core:core-ktx:1.2.0'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
        implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

        implementation 'com.jakewharton.rxbinding3:rxbinding:3.1.0'
        implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.1'
        implementation 'io.reactivex.rxjava2:rxjava:2.2.14'
        implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
        implementation 'com.github.ReactiveX:RxKotlin:2.4.0'

        api 'com.google.dagger:dagger:2.25.2'
        kapt 'com.google.dagger:dagger-compiler:2.25.2'
        api 'com.google.dagger:dagger-android:2.25.2'
        api 'com.google.dagger:dagger-android-support:2.25.2'
        kapt 'com.google.dagger:dagger-android-processor:2.25.2'

        implementation 'io.logging:logging-library:1.0'
        implementation 'org.slf4j:slf4j-api:1.7.25'
        implementation 'com.github.tony19:logback-android:2.0.0'

        implementation 'com.google.firebase:firebase-analytics:17.2.2'
        implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    }
}
